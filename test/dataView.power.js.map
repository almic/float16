{
  "version": 3,
  "sources": [
    "test/dataView.js"
  ],
  "names": [
    "_PowerAssertRecorder1",
    "PowerAssertRecorder",
    "captured",
    "prototype",
    "_capt",
    "value",
    "espath",
    "push",
    "_expr",
    "source",
    "capturedValues",
    "powerAssertContext",
    "events",
    "describe",
    "buffer",
    "ArrayBuffer",
    "dataView",
    "DataView",
    "clear",
    "Uint16Array",
    "realmDataView",
    "before",
    "require",
    "runInNewContext",
    "iframe",
    "document",
    "createElement",
    "height",
    "width",
    "body",
    "appendChild",
    "iframeDocument",
    "contentDocument",
    "write",
    "contentWindow",
    "close",
    "beforeEach",
    "it",
    "_rec1",
    "assert",
    "getFloat16",
    "name",
    "content",
    "filepath",
    "line",
    "_rec2",
    "length",
    "doesNotThrow",
    "throws",
    "TypeError",
    "_rec3",
    "_rec4",
    "setUint16",
    "_rec5",
    "setFloat16",
    "_rec6",
    "_rec7",
    "_rec8",
    "getUint16"
  ],
  "mappings": "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",
  "sourceRoot": "./",
  "sourcesContent": [
    "/* eslint-env mocha */\n/* global assert getFloat16 setFloat16 */\n\ndescribe(\"additional DataView methods\", () => {\n\n    const buffer = new ArrayBuffer(2);\n    const dataView = new DataView(buffer);\n\n    function clear() {\n        new Uint16Array(buffer)[0] = 0;\n    }\n\n    /** @type {DataView} */\n    let realmDataView;\n\n    before(() => {\n        if (typeof require !== \"undefined\") {\n            realmDataView = require(\"vm\").runInNewContext(`\n                const buffer = new ArrayBuffer(2);\n                new DataView(buffer);\n            `);\n        } else {\n            const iframe = document.createElement(\"iframe\");\n            iframe.height = iframe.width = 0;\n            document.body.appendChild(iframe);\n\n            const iframeDocument = iframe.contentDocument;\n            iframeDocument.write(`<script>\n                const buffer = new ArrayBuffer(2);\n                window.realmDataView = new DataView(buffer);\n            </script>`);\n            realmDataView = iframe.contentWindow.realmDataView;\n\n            iframeDocument.close();\n        }\n    });\n\n    describe(\"getFloat16()\", () => {\n\n        beforeEach( clear );\n\n        it(\"property `name` is 'getFloat16'\", () => {\n            assert( getFloat16.name === \"getFloat16\" );\n        });\n\n        it(\"property `length` is 2\", () => {\n            assert( getFloat16.length === 2 );\n        });\n\n        it(\"first argument must be DataView instance\", () => {\n            assert.doesNotThrow(() => getFloat16(dataView, 0));\n\n            assert.throws(() => getFloat16(null, 0), TypeError);\n            assert.throws(() => getFloat16(3.14, 0), TypeError);\n            assert.throws(() => getFloat16(\"test\", 0), TypeError);\n            assert.throws(() => getFloat16({}, 0), TypeError);\n            assert.throws(() => getFloat16([], 0), TypeError);\n            assert.throws(() => getFloat16(() => {}, 0), TypeError);\n        });\n\n        it(\"get 0.0007572174072265625 by big/little endian\", () => {\n            dataView.setUint16(0, 0x1234);\n            assert( getFloat16(dataView, 0) === 0.0007572174072265625 );\n\n            dataView.setUint16(0, 0x1234, true);\n            assert( getFloat16(dataView, 0, true) === 0.0007572174072265625 );\n        });\n\n        it(\"work with DataView from anothor realm\", () => {\n            assert.doesNotThrow(() => getFloat16(realmDataView, 0));\n        });\n\n    });\n\n    describe(\"setFloat16()\", () => {\n\n        beforeEach( clear );\n\n        it(\"property `name` is 'setFloat16'\", () => {\n            assert( setFloat16.name === \"setFloat16\" );\n        });\n\n        it(\"property `length` is 3\", () => {\n            assert( setFloat16.length === 3 );\n        });\n\n        it(\"first argument must be DataView instance\", () => {\n            assert.doesNotThrow(() => setFloat16(dataView, 0, 0));\n\n            assert.throws(() => setFloat16(null, 0, 0), TypeError);\n            assert.throws(() => setFloat16(3.14, 0, 0), TypeError);\n            assert.throws(() => setFloat16(\"test\", 0, 0), TypeError);\n            assert.throws(() => setFloat16({}, 0, 0), TypeError);\n            assert.throws(() => setFloat16([], 0, 0), TypeError);\n            assert.throws(() => setFloat16(() => {}, 0, 0), TypeError);\n        });\n\n        it(\"set 0.0007572174072265625 by big/little endian\", () => {\n            setFloat16(dataView, 0, 0.0007572174072265625);\n            assert( dataView.getUint16(0) === 0x1234 );\n\n            setFloat16(dataView, 0, 0.0007572174072265625, true);\n            assert( dataView.getUint16(0, true) === 0x1234 );\n        });\n\n        it(\"work with DataView from anothor realm\", () => {\n            assert.doesNotThrow(() => setFloat16(realmDataView, 0, 0));\n        });\n\n    });\n\n});\n"
  ]
}