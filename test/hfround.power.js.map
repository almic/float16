{
  "version": 3,
  "sources": [
    "test/hfround.js"
  ],
  "names": [
    "_PowerAssertRecorder1",
    "PowerAssertRecorder",
    "captured",
    "prototype",
    "_capt",
    "value",
    "espath",
    "push",
    "_expr",
    "source",
    "capturedValues",
    "powerAssertContext",
    "events",
    "describe",
    "maxFloat16",
    "minFloat16",
    "it",
    "_rec1",
    "assert",
    "hfround",
    "name",
    "content",
    "filepath",
    "line",
    "_rec2",
    "length",
    "_rec3",
    "_rec4",
    "_rec5",
    "Number",
    "isNaN",
    "undefined",
    "NaN",
    "_rec6",
    "_rec7",
    "Object",
    "is",
    "_rec8",
    "_rec9",
    "_rec10",
    "Infinity",
    "_rec11",
    "_rec12",
    "MAX_VALUE",
    "_rec13",
    "_rec14",
    "MIN_VALUE",
    "_rec15",
    "_rec16",
    "_rec17",
    "_rec18",
    "_rec19",
    "_rec20",
    "_rec21",
    "_rec22",
    "_rec23",
    "BigInt",
    "skip",
    "throws",
    "TypeError"
  ],
  "mappings": "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",
  "sourceRoot": "./",
  "sourcesContent": [
    "/* eslint-env mocha, es2020 */\n/* global assert hfround */\n\ndescribe(\"hfround()\", () => {\n  const maxFloat16 = 65504;\n  const minFloat16 = 2 ** -24;\n\n  it(\"property `name` is 'hfround'\", () => {\n    assert(hfround.name === \"hfround\");\n  });\n\n  it(\"property `length` is 1\", () => {\n    assert(hfround.length === 1);\n  });\n\n  it(\"return NaN when value is empty or undefined or NaN\", () => {\n    assert(Number.isNaN(hfround()));\n    assert(Number.isNaN(hfround(undefined)));\n    assert(Number.isNaN(hfround(NaN)));\n  });\n\n  it(\"return 0 when value is 0 or null\", () => {\n    assert(Object.is(hfround(0), 0));\n    assert(Object.is(hfround(null), 0));\n  });\n\n  it(\"return -0 when value is -0\", () => {\n    assert(Object.is(hfround(-0), -0));\n  });\n\n  it(\"return ±Infinity when value is ±Infinity\", () => {\n    assert(hfround(Infinity) === Infinity);\n    assert(hfround(-Infinity) === -Infinity);\n  });\n\n  it(\"return ±Infinity when value is ±Number.MAX_VALUE\", () => {\n    assert(hfround(Number.MAX_VALUE) === Infinity);\n    assert(hfround(-Number.MAX_VALUE) === -Infinity);\n  });\n\n  it(\"return ±0 when value is ±Number.MIN_VALUE\", () => {\n    assert(Object.is(hfround(Number.MIN_VALUE), 0));\n    assert(Object.is(hfround(-Number.MIN_VALUE), -0));\n  });\n\n  it(\"return same value when value is ±float16 max/min value\", () => {\n    assert(hfround(maxFloat16) === maxFloat16);\n    assert(hfround(-maxFloat16) === -maxFloat16);\n    assert(hfround(minFloat16) === minFloat16);\n    assert(hfround(-minFloat16) === -minFloat16);\n  });\n\n  it(\"return 0 when value is ±float16 min value / 2\", () => {\n    assert(Object.is(hfround(minFloat16 / 2), 0));\n    assert(Object.is(hfround(-minFloat16 / 2), -0));\n  });\n\n  it(\"return ±float16 min value when value is ±float16 min value / 2 ± a bit number\", () => {\n    assert(hfround(minFloat16 / 2 + 2 ** -25) === minFloat16);\n    assert(hfround(-minFloat16 / 2 - 2 ** -25) === -minFloat16);\n  });\n\n  it(\"return 1.3369140625 when value is 1.337\", () => {\n    assert(hfround(1.337) === 1.3369140625);\n  });\n\n  it(\"throw TypeError when value is bigint\", function () {\n    // Safari 13 doesn't have BigInt\n    if (typeof BigInt === \"undefined\") {\n      this.skip();\n    }\n\n    assert.throws(() => {\n      hfround(BigInt(0));\n    }, TypeError);\n  });\n});\n"
  ]
}