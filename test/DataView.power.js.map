{
  "version": 3,
  "sources": [
    "test/DataView.js"
  ],
  "names": [
    "_PowerAssertRecorder1",
    "PowerAssertRecorder",
    "captured",
    "prototype",
    "_capt",
    "value",
    "espath",
    "push",
    "_expr",
    "source",
    "capturedValues",
    "powerAssertContext",
    "events",
    "describe",
    "buffer",
    "ArrayBuffer",
    "dataView",
    "DataView",
    "clear",
    "Uint16Array",
    "AnotherRealmDataView",
    "before",
    "timeout",
    "window",
    "iframe",
    "document",
    "createElement",
    "setAttribute",
    "style",
    "display",
    "body",
    "parentElement",
    "appendChild",
    "contentWindow",
    "remove",
    "global",
    "require",
    "runInNewContext",
    "Error",
    "beforeEach",
    "it",
    "_rec1",
    "assert",
    "getFloat16",
    "name",
    "content",
    "filepath",
    "line",
    "_rec2",
    "length",
    "doesNotThrow",
    "throws",
    "TypeError",
    "_rec3",
    "_rec4",
    "setUint16",
    "_rec5",
    "setFloat16",
    "_rec6",
    "_rec7",
    "_rec8",
    "getUint16"
  ],
  "mappings": "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",
  "sourceRoot": "./",
  "sourcesContent": [
    "/* eslint-env mocha, browser, node */\n/* global assert getFloat16 setFloat16 */\n\ndescribe(\"additional DataView methods\", () => {\n\n  const buffer = new ArrayBuffer(2);\n  const dataView = new DataView(buffer);\n\n  function clear() {\n    new Uint16Array(buffer)[0] = 0;\n  }\n\n  /** @type {DataViewConstructor} */\n  let AnotherRealmDataView;\n\n  before(async function () {\n    this.timeout(15000);\n\n    if (typeof window !== \"undefined\") {\n      const iframe = document.createElement(\"iframe\");\n      iframe.setAttribute(\"sandbox\", \"allow-same-origin allow-scripts\");\n      iframe.style.display = \"none\";\n      document.body.parentElement.appendChild(iframe);\n      AnotherRealmDataView = iframe.contentWindow.DataView;\n      iframe.remove();\n    } else if (typeof global !== \"undefined\" && typeof require !== \"undefined\") {\n      AnotherRealmDataView = require(\"vm\").runInNewContext(\"DataView\");\n    } else {\n      throw new Error(\"Unexpected environment.\");\n    }\n  });\n\n  describe(\"getFloat16()\", () => {\n\n    beforeEach( clear );\n\n    it(\"property `name` is 'getFloat16'\", () => {\n      assert( getFloat16.name === \"getFloat16\" );\n    });\n\n    it(\"property `length` is 2\", () => {\n      assert( getFloat16.length === 2 );\n    });\n\n    it(\"first argument must be DataView instance\", () => {\n      assert.doesNotThrow(() => getFloat16(dataView, 0));\n\n      assert.throws(() => getFloat16(null, 0), TypeError);\n      assert.throws(() => getFloat16(3.14, 0), TypeError);\n      assert.throws(() => getFloat16(\"test\", 0), TypeError);\n      assert.throws(() => getFloat16({}, 0), TypeError);\n      assert.throws(() => getFloat16([], 0), TypeError);\n      assert.throws(() => getFloat16(() => {}, 0), TypeError);\n    });\n\n    it(\"get 0.0007572174072265625 by big/little endian\", () => {\n      dataView.setUint16(0, 0x1234);\n      assert( getFloat16(dataView, 0) === 0.0007572174072265625 );\n\n      dataView.setUint16(0, 0x1234, true);\n      assert( getFloat16(dataView, 0, true) === 0.0007572174072265625 );\n    });\n\n    it(\"work with DataView from anothor realm\", () => {\n      assert.doesNotThrow(() => getFloat16(new AnotherRealmDataView(buffer), 0));\n    });\n\n  });\n\n  describe(\"setFloat16()\", () => {\n\n    beforeEach( clear );\n\n    it(\"property `name` is 'setFloat16'\", () => {\n      assert( setFloat16.name === \"setFloat16\" );\n    });\n\n    it(\"property `length` is 3\", () => {\n      assert( setFloat16.length === 3 );\n    });\n\n    it(\"first argument must be DataView instance\", () => {\n      assert.doesNotThrow(() => setFloat16(dataView, 0, 0));\n\n      assert.throws(() => setFloat16(null, 0, 0), TypeError);\n      assert.throws(() => setFloat16(3.14, 0, 0), TypeError);\n      assert.throws(() => setFloat16(\"test\", 0, 0), TypeError);\n      assert.throws(() => setFloat16({}, 0, 0), TypeError);\n      assert.throws(() => setFloat16([], 0, 0), TypeError);\n      assert.throws(() => setFloat16(() => {}, 0, 0), TypeError);\n    });\n\n    it(\"set 0.0007572174072265625 by big/little endian\", () => {\n      setFloat16(dataView, 0, 0.0007572174072265625);\n      assert( dataView.getUint16(0) === 0x1234 );\n\n      setFloat16(dataView, 0, 0.0007572174072265625, true);\n      assert( dataView.getUint16(0, true) === 0x1234 );\n    });\n\n    it(\"work with DataView from anothor realm\", () => {\n      assert.doesNotThrow(() => setFloat16(new AnotherRealmDataView(buffer), 0, 0));\n    });\n\n  });\n\n});\n"
  ]
}